{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "https://example.com/api", 
      "description": "Replace example.com with your app server" 
    }
  ],
  "paths": {
    "/users/": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create New User",
        "operationId": "create_new_user_users__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Users",
        "operationId": "get_users_users__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by username",
              "title": "Username"
            },
            "description": "Filter by username"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Read User",
        "operationId": "read_user_users__user_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update Existing User",
        "operationId": "update_existing_user_users__user_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Soft Delete User",
        "operationId": "soft_delete_user_users__user_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login",
        "operationId": "login_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/secrets/": {
      "get": {
        "tags": [
          "Secrets"
        ],
        "summary": "List Secrets",
        "operationId": "list_secrets_secrets__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "repo_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "List of repository IDs",
              "title": "Repo Ids"
            },
            "description": "List of repository IDs"
          },
          {
            "name": "vc_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "List of Version Control IDs",
              "title": "Vc Ids"
            },
            "description": "List of Version Control IDs"
          },
          {
            "name": "pr_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "List of Pull Request IDs",
              "title": "Pr Ids"
            },
            "description": "List of Pull Request IDs"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of items per page",
              "default": 10,
              "title": "Limit"
            },
            "description": "Number of items per page"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "pr_scan_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Pr Scan Id"
            }
          },
          {
            "name": "commit_scan_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Commit Scan Id"
            }
          },
          {
            "name": "secret",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Secret"
            }
          },
          {
            "name": "rule",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Rule"
            }
          },
          {
            "name": "commit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Commit"
            }
          },
          {
            "name": "author",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Author"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Email"
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            }
          },
          {
            "name": "severity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SeverityLevel"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Severity"
            }
          },
          {
            "name": "scan_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ScanType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Scan Type"
            }
          },
          {
            "name": "whitelisted",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Whitelisted"
            }
          },
          {
            "name": "message",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Message"
            }
          },
          {
            "name": "branch",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Branch"
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created At"
            }
          },
          {
            "name": "updated_at",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Updated At"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": "repo_count",
              "title": "Sort By"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": "asc",
              "title": "Order By"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/secrets/:secret_name/repos": {
      "get": {
        "tags": [
          "Secrets"
        ],
        "summary": "List Secret's Repos",
        "operationId": "list_secrets_secrets__secret_name_repos_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "secret_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Secret name",
              "title": "Secret Name"
            },
            "description": "Secret name"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of items per page",
              "default": 10,
              "title": "Limit"
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/secrets/{secret_id}": {
      "get": {
        "tags": [
          "Secrets"
        ],
        "summary": "Get Secret Details",
        "operationId": "get_secret_secrets__secret_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "secret_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Secret Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecretsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/repo/fetch/all": {
      "post": {
        "tags": [
          "Repositories"
        ],
        "summary": "Fetch All Repos",
        "operationId": "fetch_all_repos_for_vc_endpoint_repo_fetch_all_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FetchReposRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/repo/": {
      "get": {
        "tags": [
          "Repositories"
        ],
        "summary": "Get Repos",
        "operationId": "get_repos_controller_repo__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "vc_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "List of VC IDs",
              "title": "Vc Ids"
            },
            "description": "List of VC IDs"
          },
          {
            "name": "repo_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "List of repository IDs",
              "title": "Repo Ids"
            },
            "description": "List of repository IDs"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortByEnum"
                }
              ],
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": "desc",
              "title": "Order By"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "created_after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created After"
            }
          },
          {
            "name": "created_before",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created Before"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/repo/scan": {
      "post": {
        "tags": [
          "Repositories"
        ],
        "summary": "Scan Repo By Id",
        "operationId": "scan_repo_by_id_endpoint_repo_scan_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepoId"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/repo/scan/all": {
      "post": {
        "tags": [
          "Repositories"
        ],
        "summary": "Scan All Repos",
        "operationId": "scan_all_repos_for_vc_endpoint_repo_scan_all_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FetchReposRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/repo/{repo_id}": {
      "get": {
        "tags": [
          "Repositories"
        ],
        "summary": "Get Repo",
        "operationId": "get_repo_repo__repo_id__get",
        "parameters": [
          {
            "name": "repo_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Repo Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/repo/{repo_id}/sbom": {
      "get": {
        "tags": [
          "Repositories"
        ],
        "summary": "Generate Sbom For Repo",
        "operationId": "generate_sbom_for_repo_endpoint_repo__repo_id__sbom_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "repo_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Repo Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/repo/repo/{repo_id}/sbom/download": {
      "get": {
        "tags": [
          "Repositories"
        ],
        "summary": "Download Sbom For Repo",
        "operationId": "download_sbom_for_repo_repo_repo__repo_id__sbom_download_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "repo_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Repo Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/pr/": {
      "get": {
        "tags": [
          "Pull Requests"
        ],
        "summary": "List Pr",
        "operationId": "list_pr_pr__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pr_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Pr Id"
            }
          },
          {
            "name": "repo_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "List of Repo IDs",
              "title": "Repo Ids"
            },
            "description": "List of Repo IDs"
          },
          {
            "name": "vc_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "List of VC IDs",
              "title": "Vc Ids"
            },
            "description": "List of VC IDs"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of items per page",
              "default": 10,
              "title": "Limit"
            },
            "description": "Number of items per page"
          },
          {
            "name": "pr_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Pr Name"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response List Pr Pr  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/pr/scan/{pr_scan_id}": {
      "get": {
        "tags": [
          "Pull Requests"
        ],
        "summary": "Get Pr Scan By Id Route",
        "operationId": "get_pr_scan_by_id_route_pr_scan__pr_scan_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pr_scan_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Pr Scan Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PRScan"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/pr/scans/status/": {
      "get": {
        "tags": [
          "Pull Requests"
        ],
        "summary": "Get Pr Scans By Status",
        "operationId": "get_pr_scans_by_status_pr_scans_status__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/StatusEnum"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of items per page",
              "default": 10,
              "title": "Limit"
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Pr Scans By Status Pr Scans Status  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/live_commits/": {
      "get": {
        "tags": [
          "Live Commits"
        ],
        "summary": "Get Live Commits",
        "operationId": "get_live_commits_endpoint_live_commits__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "vc_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "List of VC IDs",
              "title": "Vc Ids"
            },
            "description": "List of VC IDs"
          },
          {
            "name": "repo_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "List of Repo IDs",
              "title": "Repo Ids"
            },
            "description": "List of Repo IDs"
          },
          {
            "name": "branch_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Branch Name"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of items per page",
              "default": 10,
              "title": "Limit"
            },
            "description": "Number of items per page"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Order By"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/live_commits/scan/": {
      "get": {
        "tags": [
          "Live Commits"
        ],
        "summary": "Get Live Commits Scan",
        "operationId": "get_live_commits_scan_endpoint_live_commits_scan__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "vc_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "List of VC IDs",
              "title": "Vc Ids"
            },
            "description": "List of VC IDs"
          },
          {
            "name": "repo_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "List of Repo IDs",
              "title": "Repo Ids"
            },
            "description": "List of Repo IDs"
          },
          {
            "name": "commit_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of Commit IDs",
              "title": "Commit Ids"
            },
            "description": "List of Commit IDs"
          },
          {
            "name": "author",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter by author name",
              "title": "Author"
            },
            "description": "Filter by author name"
          },
          {
            "name": "commit_msg",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter by commit message",
              "title": "Commit Msg"
            },
            "description": "Filter by commit message"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of items per page",
              "default": 10,
              "title": "Limit"
            },
            "description": "Number of items per page"
          },
          {
            "name": "scan_type",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LiveCommitScanType"
                }
              ],
              "description": "Filter by scan type: SECRET or VULNERABILITY",
              "default": "SECRET",
              "title": "Scan Type"
            },
            "description": "Filter by scan type: SECRET or VULNERABILITY"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Search across all parameters",
              "title": "Search"
            },
            "description": "Search across all parameters"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Sort by 'repo_count', 'secret_count', or 'vulnerability_count'",
              "title": "Sort By"
            },
            "description": "Sort by 'repo_count', 'secret_count', or 'vulnerability_count'"
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Order by 'asc' or 'desc'",
              "default": "asc",
              "title": "Order By"
            },
            "description": "Order by 'asc' or 'desc'"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/whitelist/": {
      "post": {
        "tags": [
          "Allowlist"
        ],
        "summary": "Create Allowlist",
        "operationId": "create_whitelist_whitelist__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WhitelistCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Allowlist"
        ],
        "summary": "Fetch Allowlist",
        "operationId": "fetch_whitelist_whitelist__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "vc_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Vc Ids"
            }
          },
          {
            "name": "repo_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Repo Ids"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Sort by field, e.g., vcs, repos",
              "default": "id",
              "title": "Sort By"
            },
            "description": "Sort by field, e.g., vcs, repos"
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Order direction: asc or desc",
              "default": "asc",
              "title": "Order By"
            },
            "description": "Order direction: asc or desc"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Fetch Whitelist Whitelist  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/whitelist/{whitelist_id}": {
      "put": {
        "tags": [
          "Allowlist"
        ],
        "summary": "Modify Allowlist",
        "operationId": "modify_whitelist_whitelist__whitelist_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "whitelist_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Whitelist Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WhitelistUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhitelistUpdateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/incident/": {
      "get": {
        "tags": [
          "Incidents"
        ],
        "summary": "Fetch Incidents",
        "operationId": "fetch_incidents_incident__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "incident_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/IncidentTypeEnum"
                },
                {
                  "type": "null"
                }
              ],
              "default": "secret",
              "title": "Incident Type"
            }
          },
          {
            "name": "repo_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "List of repository IDs",
              "title": "Repo Ids"
            },
            "description": "List of repository IDs"
          },
          {
            "name": "vc_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "List of VC IDs",
              "title": "Vc Ids"
            },
            "description": "List of VC IDs"
          },
          {
            "name": "pr_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "List of PR IDs",
              "title": "Pr Ids"
            },
            "description": "List of PR IDs"
          },
          {
            "name": "group_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "List of Group IDs",
              "title": "Group Ids"
            },
            "description": "List of Group IDs"
          },
          {
            "name": "from_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter incidents from this date (inclusive)",
              "title": "From Date"
            },
            "description": "Filter incidents from this date (inclusive)"
          },
          {
            "name": "to_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter incidents up to this date (inclusive)",
              "title": "To Date"
            },
            "description": "Filter incidents up to this date (inclusive)"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of items per page",
              "default": 10,
              "title": "Limit"
            },
            "description": "Number of items per page"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Field to sort by",
              "default": "created_at",
              "title": "Sort By"
            },
            "description": "Field to sort by"
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Order direction ('asc' or 'desc')",
              "default": "desc",
              "title": "Order By"
            },
            "description": "Order direction ('asc' or 'desc')"
          },
          {
            "name": "severity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Severity"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/IncidentTypeEnum"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Type"
            }
          },
          {
            "name": "secret",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Secret"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "pr_scan_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Pr Scan Id"
            }
          },
          {
            "name": "rule",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Rule"
            }
          },
          {
            "name": "commit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Commit"
            }
          },
          {
            "name": "author",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Author"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Email"
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            }
          },
          {
            "name": "scan_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Scan Type"
            }
          },
          {
            "name": "whitelisted",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Whitelisted"
            }
          },
          {
            "name": "message",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Message"
            }
          },
          {
            "name": "branch",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Branch"
            }
          },
          {
            "name": "created_after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created After"
            }
          },
          {
            "name": "created_before",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created Before"
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Updated After"
            }
          },
          {
            "name": "updated_before",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Updated Before"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/incident/filters": {
      "get": {
        "tags": [
          "Incidents"
        ],
        "summary": "List Available Filters",
        "operationId": "list_available_filters_incident_filters_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/incident/{incident_id}/status": {
      "patch": {
        "tags": [
          "Incidents"
        ],
        "summary": "Update Status",
        "operationId": "update_status_incident__incident_id__status_patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "incident_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Incident Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/IncidentStatusEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/incident/{incident_id}/severity": {
      "patch": {
        "tags": [
          "Incidents"
        ],
        "summary": "Update Severity",
        "operationId": "update_status_incident__incident_id__severity_patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "incident_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Incident Id"
            }
          },
          {
            "name": "severity",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SeverityLevel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/incident/{incident_id}": {
      "get": {
        "tags": [
          "Incidents"
        ],
        "summary": "Fetch Incident By Id",
        "operationId": "fetch_incident_by_id_incident__incident_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "incident_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Incident Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/groups/": {
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Create Group",
        "description": "Create a new group. Admin access required.",
        "operationId": "create_group_controller_groups__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get All Groups",
        "description": "Retrieve paginated list of groups with optional search, filtering, and sorting.",
        "operationId": "get_groups_groups__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "repo_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Repo Ids"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": "name",
              "title": "Sort By"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": "asc",
              "title": "Order By"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group_id}": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get Group by ID",
        "description": "Fetch details for a specific group.",
        "operationId": "get_group_groups__group_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Groups"
        ],
        "summary": "Delete Group",
        "description": "Delete a group. Admin access required.",
        "operationId": "delete_group_controller_groups__group_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Groups"
        ],
        "summary": "Update Group",
        "description": "Update group details (name, description, or repositories). Admin access required.",
        "operationId": "update_group_controller_groups__group_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group_id}/repos": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get Repos For Group",
        "description": "Retrieve repositories associated with a group.",
        "operationId": "get_repos_for_group_controller_groups__group_id__repos_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group_id}/add_repos": {
      "put": {
        "tags": [
          "Groups"
        ],
        "summary": "Add Repos To Group",
        "description": "Add multiple repositories to a group.",
        "operationId": "add_repos_to_group_controller_groups__group_id__add_repos_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReposRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group_id}/remove_repos": {
      "put": {
        "tags": [
          "Groups"
        ],
        "summary": "Remove Repos From Group",
        "description": "Remove multiple repositories from a group.",
        "operationId": "remove_repos_from_group_controller_groups__group_id__remove_repos_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReposRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vulnerabilities/": {
      "get": {
        "tags": [
          "SCA"
        ],
        "summary": "List SCA CVEs",
        "operationId": "list_vulnerabilities_vulnerabilities__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "repo_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Repo Ids"
            }
          },
          {
            "name": "vc_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Vc Ids"
            }
          },
          {
            "name": "pr_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Pr Ids"
            }
          },
          {
            "name": "live_commit_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Live Commit Ids"
            }
          },
          {
            "name": "vulnerability_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Vulnerability Id"
            }
          },
          {
            "name": "cve_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cve Id"
            }
          },
          {
            "name": "fix_available",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Fix Available"
            }
          },
          {
            "name": "severity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Severity"
            }
          },
          {
            "name": "created_after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created After"
            }
          },
          {
            "name": "created_before",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created Before"
            }
          },
          {
            "name": "artifact_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Artifact Type"
            }
          },
          {
            "name": "package",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Package"
            }
          },
          {
            "name": "license",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "License"
            }
          },
          {
            "name": "vulnerability_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/VulnerabilityType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Vulnerability Type"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "title": "Order By"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vulnerabilities/scan/vcs/{vc_id}": {
      "post": {
        "tags": [
          "SCA"
        ],
        "summary": "Scan All Repos For Vc",
        "operationId": "scan_all_repos_for_vc_endpoint_vulnerabilities_scan_vcs__vc_id__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "vc_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Vc Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vulnerabilities/scan/repo/{repo_id}": {
      "post": {
        "tags": [
          "SCA"
        ],
        "summary": "Scan Repo By Id",
        "operationId": "scan_repo_by_id_endpoint_vulnerabilities_scan_repo__repo_id__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "repo_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Repo Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health",
        "operationId": "health_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AllowedScanType": {
        "type": "string",
        "enum": [
          "Loose",
          "Aggressive"
        ],
        "title": "AllowedScanType"
      },
      "AttachPropertyRequest": {
        "properties": {
          "property_id": {
            "type": "integer",
            "title": "Property Id"
          },
          "property_type": {
            "$ref": "#/components/schemas/PropertyType"
          }
        },
        "type": "object",
        "required": [
          "property_id",
          "property_type"
        ],
        "title": "AttachPropertyRequest"
      },
      "BulkIncidentUpdateByFilters": {
        "properties": {
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IncidentStatusEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "filters": {
            "$ref": "#/components/schemas/IncidentFilters"
          }
        },
        "type": "object",
        "required": [
          "status",
          "filters"
        ],
        "title": "BulkIncidentUpdateByFilters"
      },
      "BulkIncidentUpdateByIds": {
        "properties": {
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IncidentStatusEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "incident_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Incident Ids"
          }
        },
        "type": "object",
        "required": [
          "status",
          "incident_ids"
        ],
        "title": "BulkIncidentUpdateByIds"
      },
      "CommentBase": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content"
          },
          "incident_id": {
            "type": "integer",
            "title": "Incident Id"
          }
        },
        "type": "object",
        "required": [
          "content",
          "incident_id"
        ],
        "title": "CommentBase"
      },
      "CommentResponse": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content"
          },
          "incident_id": {
            "type": "integer",
            "title": "Incident Id"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "content",
          "incident_id",
          "id",
          "created_at"
        ],
        "title": "CommentResponse"
      },
      "CreateGroupSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "example": "DevOps Team"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "example": "Group responsible for DevOps tasks"
          },
          "repos": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Repos",
            "example": [1, 2, 3]
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "CreateGroupSchema"
      },
      "CreateSlackIntegration": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "channel": {
            "type": "string",
            "title": "Channel"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "token",
          "channel"
        ],
        "title": "CreateSlackIntegration"
      },
      "FetchReposRequest": {
        "properties": {
          "vc_id": {
            "type": "integer",
            "title": "Vc Id"
          }
        },
        "type": "object",
        "required": [
          "vc_id"
        ],
        "title": "FetchReposRequest"
      },
      "FilterOption": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "searchable": {
            "type": "boolean",
            "title": "Searchable"
          }
        },
        "type": "object",
        "required": [
          "key",
          "label",
          "type",
          "searchable"
        ],
        "title": "FilterOption"
      },
      "FilterValueResponse": {
        "properties": {
          "values": {
            "items": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "type": "array",
            "title": "Values"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "values",
          "total"
        ],
        "title": "FilterValueResponse"
      },
      "FilterValuesResponse": {
        "properties": {
          "values": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Values"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "values",
          "total"
        ],
        "title": "FilterValuesResponse"
      },
      "GroupUpdateRequest": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Description"
          },
          "repos": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Repository IDs"
          }
        },
        "type": "object",
        "title": "GroupUpdateRequest",
        "description": "Schema for updating a group."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "IncidentFilters": {
        "properties": {
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IncidentTypeEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secret"
          },
          "search": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search"
          },
          "pr_scan_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pr Scan Id"
          },
          "rule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rule"
          },
          "commit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Commit"
          },
          "author": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "severity": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Severity"
          },
          "scan_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scan Type"
          },
          "whitelisted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Whitelisted"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "branch": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Branch"
          },
          "created_after": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created After"
          },
          "created_before": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created Before"
          },
          "updated_after": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated After"
          },
          "updated_before": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated Before"
          }
        },
        "type": "object",
        "title": "IncidentFilters"
      },
      "IncidentStatusEnum": {
        "type": "string",
        "enum": [
          "open",
          "in-progress",
          "closed"
        ],
        "title": "IncidentStatusEnum"
      },
      "IncidentTypeEnum": {
        "type": "string",
        "enum": [
          "secret",
          "vulnerability"
        ],
        "title": "IncidentTypeEnum"
      },
      "JiraAlertCreate": {
        "properties": {
          "base_url": {
            "type": "string",
            "title": "Base Url"
          },
          "user_email": {
            "type": "string",
            "title": "User Email"
          },
          "api_token": {
            "type": "string",
            "title": "Api Token"
          },
          "project_key": {
            "type": "string",
            "title": "Project Key"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          }
        },
        "type": "object",
        "required": [
          "base_url",
          "user_email",
          "api_token",
          "project_key",
          "is_active"
        ],
        "title": "JiraAlertCreate"
      },
      "JiraAlertResponse": {
        "properties": {
          "base_url": {
            "type": "string",
            "title": "Base Url"
          },
          "user_email": {
            "type": "string",
            "title": "User Email"
          },
          "api_token": {
            "type": "string",
            "title": "Api Token"
          },
          "project_key": {
            "type": "string",
            "title": "Project Key"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "base_url",
          "user_email",
          "api_token",
          "project_key",
          "is_active",
          "id",
          "created_at"
        ],
        "title": "JiraAlertResponse"
      },
      "LiveCommitScanType": {
        "type": "string",
        "enum": [
          "SECRET",
          "VULNERABILITY"
        ],
        "title": "LiveCommitScanType"
      },
      "LoginRequest": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "LoginRequest"
      },
      "PR": {
        "properties": {
          "pr_id": {
            "type": "integer",
            "title": "Pr Id"
          },
          "pr_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pr Name"
          },
          "repo_id": {
            "type": "integer",
            "title": "Repo Id"
          },
          "pr_link": {
            "type": "string",
            "title": "Pr Link"
          },
          "vctype": {
            "$ref": "#/components/schemas/VcTypesEnum"
          },
          "vc_id": {
            "type": "integer",
            "title": "Vc Id"
          },
          "webhook_id": {
            "type": "integer",
            "title": "Webhook Id"
          },
          "last_scan": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Scan"
          },
          "secret_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secret Count"
          },
          "vulnerability_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vulnerability Count"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "pr_id",
          "pr_name",
          "repo_id",
          "pr_link",
          "vctype",
          "vc_id",
          "webhook_id",
          "id",
          "created_at"
        ],
        "title": "PR"
      },
      "PRInDB": {
        "properties": {
          "pr_id": {
            "type": "integer",
            "title": "Pr Id"
          },
          "pr_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pr Name"
          },
          "repo_id": {
            "type": "integer",
            "title": "Repo Id"
          },
          "pr_link": {
            "type": "string",
            "title": "Pr Link"
          },
          "vctype": {
            "$ref": "#/components/schemas/VcTypesEnum"
          },
          "vc_id": {
            "type": "integer",
            "title": "Vc Id"
          },
          "webhook_id": {
            "type": "integer",
            "title": "Webhook Id"
          },
          "last_scan": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Scan"
          },
          "secret_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secret Count"
          },
          "vulnerability_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vulnerability Count"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "pr_id",
          "pr_name",
          "repo_id",
          "pr_link",
          "vctype",
          "vc_id",
          "webhook_id",
          "id",
          "created_at"
        ],
        "title": "PRInDB"
      },
      "PRScan": {
        "properties": {
          "pr_id": {
            "type": "integer",
            "title": "Pr Id"
          },
          "vc_id": {
            "type": "integer",
            "title": "Vc Id"
          },
          "webhook_id": {
            "type": "integer",
            "title": "Webhook Id"
          },
          "repo_id": {
            "type": "integer",
            "title": "Repo Id"
          },
          "vc_type": {
            "type": "string",
            "title": "Vc Type"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusEnum"
              }
            ],
            "default": "pending"
          },
          "block_status": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Block Status",
            "default": true
          },
          "other_details": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Other Details"
          },
          "stat_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stat Url"
          },
          "scan_type": {
            "$ref": "#/components/schemas/PRScanType"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "pr": {
            "$ref": "#/components/schemas/PR"
          },
          "vc_name": {
            "type": "string",
            "title": "Vc Name"
          },
          "repo_name": {
            "type": "string",
            "title": "Repo Name"
          },
          "secret_count": {
            "type": "integer",
            "title": "Secret Count",
            "default": 0
          },
          "vulnerability_count": {
            "type": "integer",
            "title": "Vulnerability Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "pr_id",
          "vc_id",
          "webhook_id",
          "repo_id",
          "vc_type",
          "scan_type",
          "id",
          "created_at",
          "pr",
          "vc_name",
          "repo_name"
        ],
        "title": "PRScan"
      },
      "PRScanType": {
        "type": "string",
        "enum": [
          "SECRET",
          "VULNERABILITY"
        ],
        "title": "PRScanType"
      },
      "PasswordResetRequest": {
        "properties": {
          "new_password": {
            "type": "string",
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "new_password"
        ],
        "title": "PasswordResetRequest"
      },
      "PropertyCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "value": {
            "type": "number",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "title": "PropertyCreate"
      },
      "PropertyResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "value": {
            "type": "number",
            "title": "Value"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "value",
          "id"
        ],
        "title": "PropertyResponse"
      },
      "PropertyType": {
        "type": "string",
        "enum": [
          "business_criticalities",
          "environments",
          "data_sensitivities",
          "regulatory_requirements"
        ],
        "title": "PropertyType"
      },
      "PropertyUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "value": {
            "type": "number",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "title": "PropertyUpdate"
      },
      "RepoFilterSchema": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "author": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author"
          },
          "vc_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vc Id"
          }
        },
        "type": "object",
        "title": "RepoFilterSchema"
      },
      "RepoId": {
        "properties": {
          "repository_id": {
            "type": "integer",
            "title": "Repository Id"
          }
        },
        "type": "object",
        "required": [
          "repository_id"
        ],
        "title": "RepoId"
      },
      "RepoResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "repoUrl": {
            "type": "string",
            "title": "Repourl"
          },
          "author": {
            "type": "string",
            "title": "Author"
          },
          "lastScanDate": {
            "type": "string",
            "format": "date-time",
            "title": "Lastscandate"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "repoUrl",
          "author",
          "lastScanDate",
          "created_at"
        ],
        "title": "RepoResponse"
      },
      "ReposRequest": {
        "properties": {
          "repo_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Repo Ids",
            "example": [1, 2, 3]
          }
        },
        "type": "object",
        "required": [
          "repo_ids"
        ],
        "title": "ReposRequest"
      },
      "ScanType": {
        "type": "string",
        "enum": [
          "repo_scan",
          "pr_scan",
          "live_commit"
        ],
        "title": "ScanType"
      },
      "SecretsResponse": {
        "properties": {
          "secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secret"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "file": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File"
          },
          "line": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line"
          },
          "start_line": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Line"
          },
          "end_line": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Line"
          },
          "start_column": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Column"
          },
          "end_column": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Column"
          },
          "match": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Match"
          },
          "rule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rule"
          },
          "commit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Commit"
          },
          "author": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "repository_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Repository Id"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "fingerprint": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fingerprint"
          },
          "entropy": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entropy"
          },
          "severity": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SeverityLevel"
              },
              {
                "type": "null"
              }
            ]
          },
          "scan_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ScanType"
              },
              {
                "type": "null"
              }
            ]
          },
          "whitelisted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Whitelisted"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "whitelist_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Whitelist Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "pr_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pr Id"
          },
          "pr_scan_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pr Scan Id"
          },
          "commit_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Commit Id"
          },
          "live_commit_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Live Commit Id"
          },
          "live_commit_scan_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Live Commit Scan Id"
          },
          "repository": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RepoResponse"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "SecretsResponse"
      },
      "SeverityLevel": {
        "type": "string",
        "enum": [
          "critical",
          "high",
          "medium",
          "low",
          "informational",
          "unknown"
        ],
        "title": "SeverityLevel"
      },
      "SlackIntegrationBase": {
        "properties": {
          "token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token"
          },
          "channel": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Channel"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active",
            "default": true
          }
        },
        "type": "object",
        "title": "SlackIntegrationBase"
      },
      "SortByEnum": {
        "type": "string",
        "enum": [
          "vc_id",
          "repo_id",
          "secrets_count",
          "created_at",
          "score_normalized",
          "author",
          "vulnerability_count"
        ],
        "title": "SortByEnum"
      },
      "StatusEnum": {
        "type": "string",
        "enum": [
          "pending",
          "completed",
          "processing",
          "failed"
        ],
        "title": "StatusEnum"
      },
      "Token": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          }
        },
        "type": "object",
        "required": [
          "access_token"
        ],
        "title": "Token"
      },
      "UpdateSlackIntegration": {
        "properties": {
          "token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token"
          },
          "channel": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Channel"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active",
            "default": true
          }
        },
        "type": "object",
        "title": "UpdateSlackIntegration"
      },
      "UserCreate": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          },
          "user_email": {
            "type": "string",
            "title": "User Email"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "role",
          "user_email",
          "password"
        ],
        "title": "UserCreate"
      },
      "UserResponse": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          },
          "user_email": {
            "type": "string",
            "title": "User Email"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "group_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Id"
          },
          "added_by_uid": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Added By Uid"
          },
          "updated_by_uid": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By Uid"
          }
        },
        "type": "object",
        "required": [
          "username",
          "role",
          "user_email",
          "id",
          "created_at",
          "updated_at",
          "added_by_uid",
          "updated_by_uid"
        ],
        "title": "UserResponse"
      },
      "UserRole": {
        "type": "string",
        "enum": [
          "admin",
          "user",
          "readonly"
        ],
        "title": "UserRole"
      },
      "UserUpdate": {
        "properties": {
          "role": {
            "$ref": "#/components/schemas/UserRole"
          },
          "active": {
            "type": "boolean",
            "title": "Active"
          },
          "user_email": {
            "type": "string",
            "title": "User Email"
          }
        },
        "type": "object",
        "required": [
          "role",
          "active",
          "user_email"
        ],
        "title": "UserUpdate"
      },
      "VCCreate": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/VcTypes"
          },
          "token": {
            "type": "string",
            "title": "Token"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "type",
          "token",
          "url",
          "name"
        ],
        "title": "VCCreate"
      },
      "VCResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "token": {
            "type": "string",
            "title": "Token"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "added_by_user_id": {
            "type": "integer",
            "title": "Added By User Id"
          },
          "created_by": {
            "type": "integer",
            "title": "Created By"
          },
          "updated_by": {
            "type": "integer",
            "title": "Updated By"
          },
          "active": {
            "type": "boolean",
            "title": "Active"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "type",
          "token",
          "url",
          "added_by_user_id",
          "created_by",
          "updated_by",
          "active"
        ],
        "title": "VCResponse"
      },
      "VCUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          }
        },
        "type": "object",
        "title": "VCUpdate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VcTypes": {
        "type": "string",
        "enum": [
          "bitbucket",
          "github",
          "gitlab"
        ],
        "title": "VcTypes"
      },
      "VcTypesEnum": {
        "type": "string",
        "enum": [
          "gitlab",
          "github",
          "bitbucket"
        ],
        "title": "VcTypesEnum"
      },
      "VulnerabilityType": {
        "type": "string",
        "enum": [
          "cve",
          "dependency-confusion"
        ],
        "title": "VulnerabilityType"
      },
      "WebhookConfigCreate": {
        "properties": {
          "vc_id": {
            "type": "integer",
            "title": "Vc Id"
          },
          "vc_type": {
            "$ref": "#/components/schemas/VcTypes"
          },
          "scan_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AllowedScanType"
              },
              {
                "type": "null"
              }
            ]
          },
          "git_actions": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Git Actions"
          },
          "target_repos": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Repos"
          },
          "block_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Block Message"
          },
          "unblock_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unblock Message"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          },
          "block_pr_on_sec_found": {
            "type": "boolean",
            "title": "Block Pr On Sec Found",
            "default": true
          },
          "block_pr_on_vul_found": {
            "type": "boolean",
            "title": "Block Pr On Vul Found",
            "default": false
          },
          "jira_alerts_enabled": {
            "type": "boolean",
            "title": "Jira Alerts Enabled",
            "default": true
          },
          "slack_alerts_enabled": {
            "type": "boolean",
            "title": "Slack Alerts Enabled",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "vc_id",
          "vc_type"
        ],
        "title": "WebhookConfigCreate"
      },
      "WebhookConfigDetail": {
        "properties": {
          "vc_id": {
            "type": "integer",
            "title": "Vc Id"
          },
          "vc_type": {
            "$ref": "#/components/schemas/VcTypes"
          },
          "scan_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AllowedScanType"
              },
              {
                "type": "null"
              }
            ]
          },
          "git_actions": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Git Actions"
          },
          "target_repos": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Repos"
          },
          "block_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Block Message"
          },
          "unblock_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unblock Message"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          },
          "block_pr_on_sec_found": {
            "type": "boolean",
            "title": "Block Pr On Sec Found",
            "default": true
          },
          "block_pr_on_vul_found": {
            "type": "boolean",
            "title": "Block Pr On Vul Found",
            "default": false
          },
          "jira_alerts_enabled": {
            "type": "boolean",
            "title": "Jira Alerts Enabled",
            "default": true
          },
          "slack_alerts_enabled": {
            "type": "boolean",
            "title": "Slack Alerts Enabled",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "secret": {
            "type": "string",
            "title": "Secret"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "vc_id",
          "vc_type",
          "id",
          "secret",
          "url"
        ],
        "title": "WebhookConfigDetail"
      },
      "WebhookConfigResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "vc_type": {
            "type": "string",
            "title": "Vc Type"
          },
          "webhook_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook Url"
          },
          "secret": {
            "type": "string",
            "title": "Secret"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "active": {
            "type": "boolean",
            "title": "Active"
          },
          "block_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Block Message"
          },
          "unblock_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unblock Message"
          },
          "block_pr_on_sec_found": {
            "type": "boolean",
            "title": "Block Pr On Sec Found"
          },
          "block_pr_on_vul_found": {
            "type": "boolean",
            "title": "Block Pr On Vul Found"
          },
          "jira_alerts_enabled": {
            "type": "boolean",
            "title": "Jira Alerts Enabled"
          },
          "slack_alerts_enabled": {
            "type": "boolean",
            "title": "Slack Alerts Enabled"
          }
        },
        "type": "object",
        "required": [
          "id",
          "vc_type",
          "secret",
          "message",
          "active",
          "block_pr_on_sec_found",
          "block_pr_on_vul_found",
          "jira_alerts_enabled",
          "slack_alerts_enabled"
        ],
        "title": "WebhookConfigResponse"
      },
      "WebhookConfigUpdate": {
        "properties": {
          "vc_id": {
            "type": "integer",
            "title": "Vc Id"
          },
          "vc_type": {
            "$ref": "#/components/schemas/VcTypes"
          },
          "scan_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AllowedScanType"
              },
              {
                "type": "null"
              }
            ]
          },
          "git_actions": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Git Actions"
          },
          "target_repos": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Repos"
          },
          "block_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Block Message"
          },
          "unblock_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unblock Message"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          },
          "block_pr_on_sec_found": {
            "type": "boolean",
            "title": "Block Pr On Sec Found",
            "default": true
          },
          "block_pr_on_vul_found": {
            "type": "boolean",
            "title": "Block Pr On Vul Found",
            "default": false
          },
          "jira_alerts_enabled": {
            "type": "boolean",
            "title": "Jira Alerts Enabled",
            "default": true
          },
          "slack_alerts_enabled": {
            "type": "boolean",
            "title": "Slack Alerts Enabled",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "vc_id",
          "vc_type"
        ],
        "title": "WebhookConfigUpdate"
      },
      "WhiteListType": {
        "type": "string",
        "enum": [
          "SECRET",
          "VULNERABILITY"
        ],
        "title": "WhiteListType"
      },
      "WhitelistCreate": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/WhiteListType"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          },
          "global_": {
            "type": "boolean",
            "title": "Global ",
            "default": false
          },
          "repos": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Repos"
          },
          "vcs": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Vcs"
          },
          "comment": {
            "type": "string",
            "title": "Comment"
          }
        },
        "type": "object",
        "required": [
          "type",
          "name",
          "vcs"
        ],
        "title": "WhitelistCreate"
      },
      "WhitelistUpdate": {
        "properties": {
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WhiteListType"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active"
          },
          "global_": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Global "
          },
          "repos": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Repos"
          },
          "vcs": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vcs"
          },
          "comment": {
            "type": "string",
            "title": "Comment"
          }
        },
        "type": "object",
        "title": "WhitelistUpdate"
      },
      "WhitelistUpdateResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "default": ""
          },
          "created_by": {
            "type": "integer",
            "title": "Created By"
          },
          "updated_by": {
            "type": "integer",
            "title": "Updated By"
          },
          "secrets_updated": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secrets Updated"
          },
          "vulnerabilities_updated": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vulnerabilities Updated"
          },
          "created_on": {
            "type": "string",
            "format": "date-time",
            "title": "Created On"
          },
          "comments": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comments",
            "default": []
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_by",
          "updated_by",
          "created_on"
        ],
        "title": "WhitelistUpdateResponse"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}